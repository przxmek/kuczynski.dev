{"version":3,"sources":["static/avatar.jpg","themes/defaultTheme.ts","HomeCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","theme","createMuiTheme","typography","fontFamily","h1","fontSize","body1","responsiveFontSizes","useStyles","makeStyles","createStyles","card","display","flexDirection","alignItems","justifyContent","textAlign","breakpoints","only","width","spacing","marginTop","marginBottom","avatar","height","textName","color","letterSpacing","lineHeight","fontWeight","textDesc","divider","backgroundColor","alignSelf","margin","button","transition","HomeCard","classes","tiltMaxAngleX","tiltMaxAngleY","transitionSpeed","gyroscope","perspective","trackOnWindow","className","Avatar","alt","src","AvatarImg","Typography","variant","Divider","IconButton","onClick","window","location","href","icon","faEnvelope","target","faGithub","faLinkedin","faInstagram","faFacebookSquare","root","backgroundImage","wrapper","minHeight","App","ThemeProvider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,oC,qLCEvCC,EAAQC,YAAe,CACzBC,WAAY,CACVC,WAAY,gCACZC,GAAI,CACFC,SAAU,QAEZC,MAAO,CACLD,SAAU,cAODL,EAFfA,EAAQO,YAAoBP,G,wFCItBQ,EAAYC,aAAW,SAACT,GAAD,eAAkBU,YAAa,CAC1DC,MAAI,GACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,UALT,cAMDhB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,UAPP,cASDnB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,UAVP,cAYDnB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,UAbP,cAeDnB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,UAhBP,cAkBDnB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,UAnBP,uBAqBMnB,EAAMoB,QAAQ,IArBpB,wBAsBOpB,EAAMoB,QAAQ,IAtBrB,gCAwBe,oEAxBf,0BAyBS,mDAzBT,6BA0BY,+BA1BZ,2BA2BU,uDA3BV,mCA6BkB,SA7BlB,iCA8BgB,UA9BhB,+BA+Bc,SA/Bd,cAiCF,QAAS,CACPC,UAAW,WACXC,aAAc,aAnCd,cAqCF,mBAAoB,CAClBD,UAAW,iBAtCX,GAyCJE,QAAM,mBACHvB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,MACPK,OAAQ,QAHN,cAKHxB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,MACPK,OAAQ,QAPN,cASHxB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,MACPK,OAAQ,QAXN,cAaHxB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,MACPK,OAAQ,QAfN,cAiBHxB,EAAMiB,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,MACPK,OAAQ,QAnBN,GAsBNC,SAAU,CACRC,MAAO,qBACPC,cAAe,YACfR,MAAO,OACPS,WAAY,OACZC,WAAY,KAEdC,SAAU,CACRJ,MAAO,sBACPvB,WAAY,gCACZwB,cAAe,YACfR,MAAO,OACPS,WAAY,MACZC,WAAY,KAEdE,QAAS,CACPC,gBAAiB,uBACjBC,UAAW,UACXC,OAAQ,eAEVC,OAAQ,CACNhB,MAAO,OACPK,OAAQ,OACRU,OAAQ,WACRF,gBAAiB,uBACjBI,WAAY,OACZ,UAAW,CACTJ,gBAAiB,8BAyFRK,EApF2B,WACxC,IAAMC,EAAU9B,IAUhB,OACE,kBAAC,IAAD,CACE+B,cAAe,EACfC,cAAe,EACfC,gBAAiB,KACjBC,WAAS,EACTC,YAAa,IACbC,eAAa,GAEb,yBAAKC,UAAWP,EAAQ3B,MACtB,kBAACmC,EAAA,EAAD,CACEC,IAAI,qBACJC,IAAKC,IACLJ,UAAWP,EAAQf,SAGrB,kBAAC2B,EAAA,EAAD,CACEC,QAAQ,KACRN,UAAWP,EAAQb,UAFrB,0BAMA,kBAACyB,EAAA,EAAD,CACEC,QAAQ,QACRN,UAAWP,EAAQR,UAFrB,kCAMA,kBAACsB,EAAA,EAAD,CAASP,UAAWP,EAAQP,UAE5B,6BACE,kBAACsB,EAAA,EAAD,CACEC,QAxCU,WAKlBC,OAAOC,SAASC,KAAhB,iBAJa,UAIb,YAHe,iBAGf,OAFe,oBAsCPZ,UAAWP,EAAQH,OACnBsB,KAAK,WAEL,kBAAC,IAAD,CAAiBC,KAAMC,OAEzB,kBAACN,EAAA,EAAD,CACER,UAAWP,EAAQH,OACnBsB,KAAK,6BACLG,OAAO,UAEP,kBAAC,IAAD,CAAiBF,KAAMG,OAEzB,kBAACR,EAAA,EAAD,CACER,UAAWP,EAAQH,OACnBsB,KAAK,6CACLG,OAAO,UAEP,kBAAC,IAAD,CAAiBF,KAAMI,OAEzB,kBAACT,EAAA,EAAD,CACER,UAAWP,EAAQH,OACnBsB,KAAK,2CACLG,OAAO,UAEP,kBAAC,IAAD,CAAiBF,KAAMK,OAEzB,kBAACV,EAAA,EAAD,CACER,UAAWP,EAAQH,OACnBsB,KAAK,yCACLG,OAAO,UAEP,kBAAC,IAAD,CAAiBF,KAAMM,WCjL7BxD,EAAYC,aAAW,SAACT,GAAD,OAAkBU,YAAa,CAC1DuD,KAAM,CACJC,gBAAiB,mDACjB/C,MAAO,QACPK,OAAQ,SAEV2C,QAAS,CACPvD,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZsD,UAAW,cAkBAC,EAdsB,WACnC,IAAM/B,EAAU9B,IAEhB,OACE,kBAAC8D,EAAA,EAAD,CAAetE,MAAOA,GACpB,yBAAK6C,UAAWP,EAAQ2B,MACtB,yBAAKpB,UAAWP,EAAQ6B,SACtB,kBAAC,EAAD,UCrBUI,QACW,cAA7BhB,OAAOC,SAASgB,UAEe,UAA7BjB,OAAOC,SAASgB,UAEhBjB,OAAOC,SAASgB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.838021de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.a0237e52.jpg\";","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\n\r\nlet theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Source Sans Pro\", sans-serif',\r\n    h1: {\r\n      fontSize: '3rem',\r\n    },\r\n    body1: {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default theme;","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Divider,\r\n  Theme,\r\n  createStyles,\r\n  Avatar,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport Tilt from 'react-parallax-tilt';\r\n\r\nimport AvatarImg from \"./static/avatar.jpg\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faLinkedin, faInstagram, faFacebookSquare } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: '16rem',\r\n    },\r\n    [theme.breakpoints.only('sm')]: {\r\n      width: '22rem',\r\n    },\r\n    [theme.breakpoints.only('md')]: {\r\n      width: '28rem',\r\n    },\r\n    [theme.breakpoints.only('lg')]: {\r\n      width: '32rem',\r\n    },\r\n    [theme.breakpoints.only('xl')]: {\r\n      width: '36rem',\r\n    },\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(4),\r\n\r\n    backgroundImage: 'linear-gradient(30deg, rgba(255,255,255,0.522) 15%, #FFFFFF 59%)',\r\n    boxShadow: '0rem 1.25rem 2.625rem 0.375rem rgba(0,0,0,0.18)',\r\n    borderRadius: '0.5rem 0.5rem 0.5rem 0.5rem',\r\n    transition: 'opacity 1.125s ease 0.5s,transform 1.125s ease 0.5s',\r\n\r\n    backgroundPosition: '0% 0%',\r\n    backgroundRepeat: 'repeat',\r\n    backgroundSize: 'cover',\r\n\r\n    '& > *': {\r\n      marginTop: '0.625rem',\r\n      marginBottom: '0.625rem',\r\n    },\r\n    '& > :first-child': {\r\n      marginTop: '0 !important',\r\n    },\r\n  },\r\n  avatar: {\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: '4em',\r\n      height: '4em',\r\n    },\r\n    [theme.breakpoints.only('sm')]: {\r\n      width: '5em',\r\n      height: '5em',\r\n    },\r\n    [theme.breakpoints.only('md')]: {\r\n      width: '5em',\r\n      height: '5em',\r\n    },\r\n    [theme.breakpoints.only('lg')]: {\r\n      width: '6em',\r\n      height: '6em',\r\n    },\r\n    [theme.breakpoints.only('xl')]: {\r\n      width: '7em',\r\n      height: '7em',\r\n    },\r\n  },\r\n  textName: {\r\n    color: 'rgba(40,40,43,0.6)',\r\n    letterSpacing: '-0.075rem',\r\n    width: '100%',\r\n    lineHeight: '1.25',\r\n    fontWeight: 200,\r\n  },\r\n  textDesc: {\r\n    color: 'rgba(40,40,43,0.55)',\r\n    fontFamily: '\"Source Sans Pro\", sans-serif',\r\n    letterSpacing: '-0.025rem',\r\n    width: '100%',\r\n    lineHeight: '1.5',\r\n    fontWeight: 200,\r\n  },\r\n  divider: {\r\n    backgroundColor: 'rgba(40,40,43,0.149)',\r\n    alignSelf: \"stretch\",\r\n    margin: '1.125rem 0 ',\r\n  },\r\n  button: {\r\n    width: '2rem',\r\n    height: '2rem',\r\n    margin: '0.375rem',\r\n    backgroundColor: 'rgba(40,40,43,0.051)',\r\n    transition: '0.3s',\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(40,40,43,0.169)',\r\n    }\r\n  }\r\n}));\r\n\r\nconst HomeCard: React.FunctionComponent = () => {\r\n  const classes = useStyles();\r\n\r\n  const emailAction = () => {\r\n    const name = 'przemek';\r\n    const domain = 'kuczynski.dev';\r\n    const params = '?subject=Hello!';\r\n\r\n    window.location.href = `mailto:${name}@${domain}${params}`;\r\n  }\r\n\r\n  return (\r\n    <Tilt\r\n      tiltMaxAngleX={5}\r\n      tiltMaxAngleY={3}\r\n      transitionSpeed={16000}\r\n      gyroscope\r\n      perspective={2000}\r\n      trackOnWindow\r\n    >\r\n      <div className={classes.card}>\r\n        <Avatar\r\n          alt=\"Picture of Przemek\"\r\n          src={AvatarImg}\r\n          className={classes.avatar}\r\n        />\r\n\r\n        <Typography\r\n          variant='h1'\r\n          className={classes.textName}\r\n        >\r\n          Przemek Kuczy≈Ñski\r\n        </Typography>\r\n        <Typography\r\n          variant='body1'\r\n          className={classes.textDesc}\r\n        >\r\n          Software Engineer | Adventurer\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n\r\n        <div>\r\n          <IconButton\r\n            onClick={emailAction}\r\n            className={classes.button}\r\n            href=\"mailto:\"\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.button}\r\n            href=\"https://github.com/przxmek\"\r\n            target=\"_blank\"\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.button}\r\n            href=\"https://www.linkedin.com/in/przekuczynski/\"\r\n            target=\"_blank\"\r\n          >\r\n            <FontAwesomeIcon icon={faLinkedin} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.button}\r\n            href=\"https://www.instagram.com/pomylilomisie/\"\r\n            target=\"_blank\"\r\n          >\r\n            <FontAwesomeIcon icon={faInstagram} />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.button}\r\n            href=\"https://www.facebook.com/pomylilomisie\"\r\n            target=\"_blank\"\r\n          >\r\n            <FontAwesomeIcon icon={faFacebookSquare} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </Tilt>\r\n\r\n  );\r\n}\r\n\r\nexport default HomeCard;\r\n","import React from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  ThemeProvider,\n} from '@material-ui/core';\n\nimport theme from './themes/defaultTheme';\n\nimport HomeCard from './HomeCard';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    backgroundImage: 'linear-gradient(45deg, #3B3B7A 0%, #91617E 100%)',\n    width: '100vw',\n    height: '100vh',\n  },\n  wrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n  },\n}));\n\nconst App: React.FunctionComponent = () => {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <div className={classes.wrapper}>\n          <HomeCard />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}